name: Build and deploy

on:
  push:
    tags:
      - 'v*'

env:
  DJANGO_SECRET_KEY:  ${{secrets.DJANGO_SECRET_KEY}}
  DATABASE_URL: ${{secrets.DATABASE_URL}}
  POSTGRES_USER:  ${{secrets.POSTGRES_USER}} 
  POSTGRES_PASSWORD:  ${{secrets.POSTGRES_PASSWORD}}
  POSTGRES_DB:  ${{secrets.POSTGRES_DB}}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: clone code
        uses: actions/checkout@v3

      - name: Set up Python
        id: setup-python
        uses: actions/setup-python@v2
    
      - uses: actions/cache@v3
        with:
          path: ~/.local/share/virtualenvs
          key: ${{ runner.os }}-python-${{ steps.setup-python.outputs.python-version }}-pipenv-${{ hashFiles('Pipfile.lock') }}


      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      

      - name: create envs file
        run: |
          touch .env
          echo "DJANGO_SECRET_KEY=${{secrets.DJANGO_SECRET_KEY}}" >> .env
          echo "DATABASE_URL2=${{secrets.DATABASE_URL}}" >> .env
          echo "DATABASE_URL=${{secrets.DATABASE_URL}}" >> .env
          echo "POSTGRES_USER=${{secrets.POSTGRES_USER}} " >> .env
          echo "POSTGRES_PASSWORD=${{secrets.POSTGRES_PASSWORD}}" >> .env
          echo "POSTGRES_DB=${{secrets.POSTGRES_DB}}" >> .env
    
      - name: Test with pytest
        run: |
          docker compose up -d
          docker exec todolist_back pytest -vv

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ secrets.DOCKERHUB_USERNAME }}/todolist_django
      - name: Login to Docker
        uses: docker/login-action@v2
        with: 
          username: ${{secrets.DOCKERHUB_USERNAME}}
          password: ${{secrets.DOCKERHUB_TOKEN}}
        
      - name: Build and Push
        uses: docker/build-push-action@v3
        with: 
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags}}
          labels: ${{steps.meta.outputs.labels}}

      - name: copy files to server
        uses: appleboy/scp-action@master
        with:
          host: ${{secrets.SSH_HOST}}
          username: ${{secrets.SSH_USER}}
          key: ${{secrets.SSH_KEY}}
          source: "deploy/docker-compose.yml,.env"
          target: "todolist"
          strip_components: 1

      - name: deploy app
        uses: appleboy/ssh-action@master
        with:
          host: ${{secrets.SSH_HOST}}
          username: ${{secrets.SSH_USER}}
          key: ${{secrets.SSH_KEY}}
          script: |
            cd todolist
            docker rmi $(docker images -f "dangling=true" -q)
            docker compose pull
            docker compose up -d

        
  

