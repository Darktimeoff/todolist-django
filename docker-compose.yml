version: "3.9"
services:
  api: 
    container_name: todolist_back
    ports: 
      - 8000:8000
    build: ./back
    restart: always
    working_dir: /code/
    environment:
      DJANGO_SECRET_KEY: ${DJANGO_SECRET_KEY}
      DATABASE_URL: ${DATABASE_URL}
    depends_on:
      migration:
        condition: service_completed_successfully
      db:
        condition: service_healthy
    networks:
      - backend

  migration:
    build: 
      context: ./back
    environment:
      DJANGO_SECRET_KEY: ${DJANGO_SECRET_KEY}
      DATABASE_URL: ${DATABASE_URL}
    depends_on:
      db:
        condition: service_healthy
    command: ./manage.py migrate
    networks:
      - backend
    
  db:
    restart: always
    container_name: todolist_db
    image: postgres:latest
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - v-todolist-db:/var/lib/postgresql/data
    healthcheck:
      test: pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - backend

  front: 
    ports:
      - 80:80
    build: 
      dockerfile: ./docker/Dockerfile
      context: ./frontend
    container_name: todolist_front
    restart: always
    networks:
      - backend
    depends_on:
      - api

  
volumes:
  v-todolist-db:
  v-todolist-api:

networks:
  backend:
    driver: bridge